
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace ET
{
public sealed partial class ConditionConfig : Luban.BeanBase
{
    public ConditionConfig(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Des = _buf.ReadInt();
        Des_Ref = null;
        ConditionType = (ConditionType)_buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ConditionParams = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); ConditionParams.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);NeedProgress = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); NeedProgress.Add(_e0);}}
    }

    public static ConditionConfig DeserializeConditionConfig(ByteBuf _buf)
    {
        return new ConditionConfig(_buf);
    }

    /// <summary>
    /// 同一个条件允许被多个条件组引用
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 界面上的描述
    /// </summary>
    public readonly int Des;
    public LanguageConfig Des_Ref;
    /// <summary>
    /// 条件类型
    /// </summary>
    public readonly ConditionType ConditionType;
    /// <summary>
    /// 条件参数
    /// </summary>
    public readonly System.Collections.Generic.List<int> ConditionParams;
    /// <summary>
    /// 需要的进度值
    /// </summary>
    public readonly System.Collections.Generic.List<int> NeedProgress;
   
    public const int __ID__ = -1029499875;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        Des_Ref = LanguageConfigCategory.Instance.GetOrDefault(Des);
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "des:" + Des + ","
        + "ConditionType:" + ConditionType + ","
        + "ConditionParams:" + Luban.StringUtil.CollectionToString(ConditionParams) + ","
        + "NeedProgress:" + Luban.StringUtil.CollectionToString(NeedProgress) + ","
        + "}";
    }
}

}
